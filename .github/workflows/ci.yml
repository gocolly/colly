---
name: CI
on:
  push:
  pull_request:

jobs:
  golangci:
    runs-on: ubuntu-latest
    steps:
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: --verbose
  test:
    name: Test ${{matrix.go-version}}
    needs: golangci
    env:
      GO111MODULE: on
    runs-on: [ubuntu-latest]
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        go-version: ['1.17', '1.16', '1.15', '1.14',  '1.13', '1.12', '1.11']

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: ${{matrix.go-version}}
      - id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=mod-cache::$(go env GOMODCACHE)"
      - name: Cache go modules
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.mod-cache }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - run: go get -a
      - run: go build 
      - run: go test -race -v -coverprofile=coverage.txt -covermode=atomic ./
      - name: Upload Code Coverage
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          files: coverage.txt
          flags: go-${{ matrix.go-version }}
          token: ${{ secrets.CODECOV_TOKEN }}
